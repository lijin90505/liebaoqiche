<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ibest.activity.dao.ActivityDetailsDao">

    <sql id="allColumns">
    	lad.id as id,    	
    	lad.activity_name as activityName,    	
    	lad.activity_content as activityContent,    	
    	lad.image_url as imageUrl,    	
    	lad.start_time as startTime,    	
    	lad.end_time as endTime,    	
    	lad.state as state,
    	lad.is_delete as isDelete,
    	lad.creater as creater,    	
    	lad.create_time as createTime,    	
    	lad.modifier as modifier,    	
    	lad.modify_time as modifyTime,    	
    	lad.version as version,    	
    	lad.remarks as remarks    	
    </sql>
    
    <sql id="joinOthers">
    </sql>
    
    <sql id="searchWhere">
    	<!-- 根据需要自行设置，同时同步InputDTO中的参数
		<if test="id != null and id != ''">
			and lad.id = #{id}
		</if>-->
		<if test="activityName != null and activityName != ''">
			and CONCAT(
			IFNULL(lad.activity_name,'')
			) LIKE CONCAT('%%', #{activityName},'%%')
		</if>
		<if test="activityContent != null and activityContent != ''">
			and CONCAT(
			IFNULL(lad.activity_content,'')
			) LIKE CONCAT('%%', #{activityContent},'%%')
		</if>
	    <if test="state != null and state != ''">
			and lad.state = #{state}
		</if>
		<!--<if test="imageUrl != null and imageUrl != ''">
			and lad.image_url = #{imageUrl}
		</if>
		<if test="startTime != null">
			and lad.start_time = #{startTime}
		</if>
		<if test="endTime != null">
			and lad.end_time = #{endTime}
		</if>
		<if test="creater != null and creater != ''">
			and lad.creater = #{creater}
		</if>
		<if test="createTime != null">
			and lad.create_time = #{createTime}
		</if>
		<if test="modifier != null and modifier != ''">
			and lad.modifier = #{modifier}
		</if>
		<if test="modifyTime != null">
			and lad.modify_time = #{modifyTime}
		</if>
		<if test="version != null and version != ''">
			and lad.version = #{version}
		</if>
		<if test="createBy != null and createBy != ''">
			and lad.CREATE_BY = #{createBy}
		</if>
		<if test="createDate != null">
			and lad.CREATE_DATE = #{createDate}
		</if>
		<if test="updateBy != null and updateBy != ''">
			and lad.UPDATE_BY = #{updateBy}
		</if>
		<if test="updateDate != null">
			and lad.UPDATE_DATE = #{updateDate}
		</if>
		-->
		<if test="isDelete != null">
			and lad.IS_DELETE = #{isDelete}
		</if>
    </sql>
    
    <sql id="searchOrder">
    	<if test="order != null and order != '' and desc != null and desc != ''">
			order by lad.${order} ${desc}
		</if>
    </sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into liebao_activity_details(
			id,
	    	activity_name,	    	
	    	activity_content,	    	
	    	image_url,	    	
	    	start_time,	    	
	    	end_time,	    	
	    	state,
	    	is_delete,
	    	creater,	    	
	    	create_time,	    	
	    	modifier,	    	
	    	modify_time,	    	
	    	version,	    	
	    	remarks	    	
		) values(
			#{id},			 
			#{activityName},			 
			#{activityContent},			 
			#{imageUrl},			 
			#{startTime},			 
			#{endTime},			 
			#{state},
			#{isDelete},
			#{creater},			 
			#{createTime},			 
			#{modifier},			 
			#{modifyTime},			 
			#{version},			 
			#{remarks}			 
		)
	</insert>
	
	<select id="checkNameUnique" resultType="ActivityDetails">
		select activity_name from liebao_activity_details  
		where is_delete = '0' and activity_name = #{activityName}
	</select>
	
	<select id="findById" resultType="ActivityDetails">
		select
			<include refid="allColumns"/>
		from
			liebao_activity_details lad
			<include refid="joinOthers"/>
		where
			lad.id = #{id}
	</select>
	
	<select id="findOneByObject" resultType="ActivityDetails">
		select
			<include refid="allColumns"/>
		from
			liebao_activity_details lad
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="countByObject" resultType="Long">
		select
			count(lad.id)
		from
			liebao_activity_details lad
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="findByPublish" resultType="ActivityDetails">
		select
			lad.id as id,
			lad.activity_name as activityName,
			lad.activity_content as activityContent,
			lad.image_url as imageUrl,
			lad.start_time as startTime,
			lad.end_time as endTime,
			lad.state as state,
			lad.is_delete as isDelete,
			lad.creater as creater,
			lad.create_time as createTime,
			lad.modifier as modifier,
			lad.modify_time as modifyTime,
			lad.version as version,
			lad.remarks as remarks
		from
			liebao_activity_details lad
			<include refid="joinOthers"/>
		where lad.state = '2'
		<include refid="searchOrder"/>
  		<if test="limitStart != null and limitSize != null">
         	LIMIT #{limitStart},#{limitSize}
 		</if>
	</select>
	
	<select id="findByObject" resultType="ActivityDetails">
		select
			lad.id as id,
			lad.activity_name as activityName,
			lad.activity_content as activityContent,
			lad.image_url as imageUrl,
			lad.start_time as startTime,
			lad.end_time as endTime,
			lad.state as state,
			lad.is_delete as isDelete,
			lad.creater as creater,
			lad.create_time as createTime,
			lad.modifier as modifier,
			lad.modify_time as modifyTime,
			lad.version as version,
			lad.remarks as remarks
		from
			liebao_activity_details lad
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
		order by lad.modify_time desc
		<include refid="searchOrder"/>
  		<if test="limitStart != null and limitSize != null">
         	LIMIT #{limitStart},#{limitSize}
 		</if>
	</select>
	
	<update id="update">
		update liebao_activity_details set
			activity_name=#{activityName},			
			activity_content=#{activityContent},			
			image_url=#{imageUrl},			
			start_time=#{startTime},			
			end_time=#{endTime},			
			state=#{state},
			is_delete=#{isDelete},
			creater=#{creater},			
			create_time=#{createTime},			
			modifier=#{modifier},			
			modify_time=#{modifyTime},			
			version=#{version},			
			remarks=#{remarks}			
		where
			id = #{id}
	</update>
	
	<!-- 物理删除 
	<delete id="deleteById">
		delete from liebao_activity_details where id = #{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from liebao_activity_details where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	-->
	
	<!-- 逻辑删除 -->
	<update id="deleteById">
		update liebao_activity_details set is_delete = 1 where id = #{id}
	</update>
	
	<update id="deleteByIds">
		update liebao_activity_details set is_delete = 1 where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</update>
</mapper>