<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<beans:description>SpringMVC Configuration</beans:description>
	
	<!-- 设置配置文件 -->
	<beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="classpath:/app.properties"/>
	</beans:bean>
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller,@Service在主容器中扫描，以防止事务失效 -->
	<context:component-scan base-package="com.ibest" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
	<context:component-scan base-package="com.ibest">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<aop:aspectj-autoproxy expose-proxy="true"/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven content-negotiation-manager="contentNegotiationManager">
		<message-converters>
			<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<beans:constructor-arg value="UTF-8"/>
			</beans:bean>
			<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>application/json;charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
				<beans:property name="prettyPrint" value="false"/>
				<beans:property name="objectMapper">
					<beans:bean class="com.ibest.framework.common.utils.JsonMapper"/>
				</beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven>
	
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <beans:property name="mediaTypes" >
	        <beans:map> 
                <beans:entry key="xml" value="application/xml"/> 
                <beans:entry key="json" value="application/json"/> 
            </beans:map>
	    </beans:property>
        <beans:property name="ignoreAcceptHeader" value="true"/>
        <beans:property name="favorPathExtension" value="true"/>
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<default-servlet-handler/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
	<beans:bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<beans:property name="proxyTargetClass" value="true" />
	</beans:bean>
	
	<!-- 使用com.ibest.framework.common.persistence.ExceptionHandlerController代替
	<beans:bean class="com.ibest.framework.common.security.SystemMappingException">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="org.apache.shiro.authz.UnauthorizedException">error/403</beans:prop>
				<beans:prop key="java.lang.Throwable">error/500</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	-->
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	   	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
		<beans:property name="defaultEncoding" value="UTF-8"/>  
		<!-- 指定所上传文件的总大小不能超过20M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
		<beans:property name="maxUploadSize" value="20971502"/>  
	</beans:bean>
	
	<!-- 定时任务 -->
	<task:executor id="executor" pool-size="10"/> 
	<task:scheduler id="scheduler" pool-size="10"/>
    <task:annotation-driven scheduler="scheduler" executor="executor" proxy-target-class="true"/>
</beans:beans>
