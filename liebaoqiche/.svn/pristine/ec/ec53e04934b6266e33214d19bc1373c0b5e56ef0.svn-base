<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ibest.recon.dao.OutSystemLocalReconDao">

    <sql id="allColumns">
    	loslr.id as id,    	
    	loslr.order_id as orderId,    	
    	loslr.transaction_id as transactionId,    	
    	loslr.rencon_type as renconType,    	
    	loslr.rencon_time as renconTime,    	
    	loslr.bill_type as billType,    	
    	loslr.trade_amount as tradeAmount,    	
    	loslr.trade_time as tradeTime,    	
    	loslr.trade_type as tradeType,    	
    	loslr.trade_state as tradeState,    	
    	loslr.recon_state as reconState,    	
    	loslr.fail_message as failMessage,    	
    	loslr.creater as creater,    	
    	loslr.create_time as createTime,    	
    	loslr.modifier as modifier,    	
    	loslr.modify_time as modifyTime,    	
    	loslr.remarks as remarks    	
    </sql>
    
    <sql id="joinOthers">
    </sql>
    
    <sql id="searchWhere">
    	<!-- 根据需要自行设置，同时同步InputDTO中的参数
		<if test="id != null and id != ''">
			and loslr.id = #{id}
		</if>
		<if test="transactionId != null and transactionId != ''">
			and loslr.transaction_id = #{transactionId}
		</if>
		<if test="renconType != null and renconType != ''">
			and loslr.rencon_type = #{renconType}
		</if>
		<if test="billType != null and billType != ''">
			and loslr.bill_type = #{billType}
		</if>
		<if test="tradeAmount != null and tradeAmount != ''">
			and loslr.trade_amount = #{tradeAmount}
		</if>
		<if test="tradeType != null and tradeType != ''">
			and loslr.trade_type = #{tradeType}
		</if>
		<if test="tradeState != null and tradeState != ''">
			and loslr.trade_state = #{tradeState}
		</if>
		<if test="reconState != null and reconState != ''">
			and loslr.recon_state = #{reconState}
		</if>
		<if test="failMessage != null and failMessage != ''">
			and loslr.fail_message = #{failMessage}
		</if>
		<if test="creater != null and creater != ''">
			and loslr.creater = #{creater}
		</if>
		<if test="createTime != null">
			and loslr.create_time = #{createTime}
		</if>
		<if test="modifier != null and modifier != ''">
			and loslr.modifier = #{modifier}
		</if>
		<if test="modifyTime != null">
			and loslr.modify_time = #{modifyTime}
		</if>
		<if test="createBy != null and createBy != ''">
			and loslr.CREATE_BY = #{createBy}
		</if>
		<if test="createDate != null">
			and loslr.CREATE_DATE = #{createDate}
		</if>
		<if test="updateBy != null and updateBy != ''">
			and loslr.UPDATE_BY = #{updateBy}
		</if>
		<if test="updateDate != null">
			and loslr.UPDATE_DATE = #{updateDate}
		</if>
		<if test="isDelete != null">
			and loslr.IS_DELETE = #{isDelete}
		</if>
		-->
		<if test="orderId != null and orderId != ''">
			and loslr.order_id = #{orderId}
		</if>
		<if test="tradeTime != null and tradeTime != ''">
			and loslr.trade_time = #{tradeTime}
		</if>
		<if test="renconTime != null and renconTime != ''">
			and loslr.rencon_time = #{renconTime}
		</if>
    </sql>
    
    <sql id="searchOrder">
    	<if test="order != null and order != '' and desc != null and desc != ''">
			order by loslr.#{order} #{desc}
		</if>
    </sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		<selectKey  keyProperty="id" resultType="java.lang.String" order="BEFORE">
             select uuid()
		</selectKey>
		insert into liebao_out_system_local_recon(
			id,
	    	order_id,	    	
	    	transaction_id,	    	
	    	rencon_type,	    	
	    	rencon_time,	    	
	    	bill_type,	    	
	    	trade_amount,	    	
	    	trade_time,	    	
	    	trade_type,	    	
	    	trade_state,	    	
	    	recon_state,	    	
	    	fail_message,	    	
	    	creater,	    	
	    	create_time,	    	
	    	modifier,	    	
	    	modify_time,	    	
	    	remarks	    	
		) values(
			#{id},
			#{orderId},			 
			#{transactionId},			 
			#{renconType},			 
			#{renconTime},			 
			#{billType},			 
			#{tradeAmount},			 
			#{tradeTime},			 
			#{tradeType},			 
			#{tradeState},			 
			#{reconState},			 
			#{failMessage},			 
			#{creater},			 
			#{createTime},			 
			#{modifier},			 
			#{modifyTime},			 
			#{remarks}			 
		)
	</insert>
	
	<select id="findById" resultType="OutSystemLocalRecon">
		select
			<include refid="allColumns"/>
		from
			liebao_out_system_local_recon loslr
			<include refid="joinOthers"/>
		where
			loslr.id = #{id}
	</select>
	
	<select id="findOneByObject" resultType="OutSystemLocalRecon">
		select
			<include refid="allColumns"/>
		from
			liebao_out_system_local_recon loslr
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="countByObject" resultType="Long">
		select
			count(loslr.id)
		from
			liebao_out_system_local_recon loslr
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="findByObject" resultType="OutSystemLocalRecon">
		select
			<include refid="allColumns"/>
		from
			liebao_out_system_local_recon loslr
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
		order by loslr.trade_time desc
  		<if test="limitStart != null and limitSize != null">
         	LIMIT #{limitStart},#{limitSize}
 		</if>
	</select>
	
	<update id="update">
		update liebao_out_system_local_recon set
			order_id=#{orderId},			
			transaction_id=#{transactionId},			
			rencon_type=#{renconType},			
			rencon_time=#{renconTime},			
			bill_type=#{billType},			
			trade_amount=#{tradeAmount},			
			trade_time=#{tradeTime},			
			trade_type=#{tradeType},			
			trade_state=#{tradeState},			
			recon_state=#{reconState},			
			fail_message=#{failMessage},			
			creater=#{creater},			
			create_time=#{createTime},			
			modifier=#{modifier},			
			modify_time=#{modifyTime},			
			remarks=#{remarks}			
		where
			id = #{id}
	</update>
	
	<!-- 物理删除 
	<delete id="deleteById">
		delete from liebao_out_system_local_recon where id = #{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from liebao_out_system_local_recon where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	-->
	
	<!-- 逻辑删除 -->
	<update id="deleteById">
		update liebao_out_system_local_recon set is_delete = 1 where id = #{id}
	</update>
	
	<update id="deleteByIds">
		update liebao_out_system_local_recon set is_delete = 1 where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</update>
</mapper>