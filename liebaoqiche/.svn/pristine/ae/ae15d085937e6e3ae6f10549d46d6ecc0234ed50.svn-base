<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ibest.experience.dao.ExpRuleDao">

    <sql id="allColumns">
    	ler.id as id,    	
    	ler.is_delete as isDelete,    	
    	ler.exp as exp,    	
    	ler.name as name,    	
    	ler.detail as detail,   
    	ler.is_delete as isDelete, 	
    	ler.create_time as createTime,    	
    	ler.modify_time as modifyTime,    	
    	ler.create_user_id as createUserId,    	
    	ler.create_user_name as createUserName,    	
    	ler.modify_user_id as modifyUserId,    	
    	ler.modify_user_name as modifyUserName    	
    </sql>
    
    <sql id="joinOthers">
    </sql>
    
    <sql id="searchWhere">
    	<!-- 根据需要自行设置，同时同步InputDTO中的参数
		<if test="id != null and id != ''">
			and ler.id = #{id}
		</if>
		<if test="exp != null">
			and ler.exp = #{exp}
		</if>-->
		<if test="name != null and name != ''">
			and CONCAT(
			IFNULL(ler.name,'')
			) LIKE CONCAT('%%', #{name},'%%')
		</if>
		<!--<if test="detail != null and detail != ''">
			and ler.detail = #{detail}
		</if>
		<if test="createTime != null">
			and ler.create_time = #{createTime}
		</if>
		<if test="modifyTime != null">
			and ler.modify_time = #{modifyTime}
		</if>
		<if test="createUserId != null and createUserId != ''">
			and ler.create_user_id = #{createUserId}
		</if>
		<if test="createUserName != null and createUserName != ''">
			and ler.create_user_name = #{createUserName}
		</if>
		<if test="modifyUserId != null and modifyUserId != ''">
			and ler.modify_user_id = #{modifyUserId}
		</if>
		<if test="modifyUserName != null and modifyUserName != ''">
			and ler.modify_user_name = #{modifyUserName}
		</if>
		<if test="createBy != null and createBy != ''">
			and ler.CREATE_BY = #{createBy}
		</if>
		<if test="createDate != null">
			and ler.CREATE_DATE = #{createDate}
		</if>
		<if test="updateBy != null and updateBy != ''">
			and ler.UPDATE_BY = #{updateBy}
		</if>
		<if test="updateDate != null">
			and ler.UPDATE_DATE = #{updateDate}
		</if>
		-->
		<if test="isDelete != null">
			and ler.IS_DELETE = #{isDelete}
		</if>
    </sql>
    
    <sql id="searchOrder">
    	<if test="order != null and order != '' and desc != null and desc != ''">
			order by ler.${order} ${desc}
		</if>
    </sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into liebao_exp_rule(
	    	id,	    	
	    	exp,	    	
	    	name,	    	
	    	detail,	
	    	is_delete,	    	
	    	create_time,	    	
	    	modify_time,	    	
	    	create_user_id,	    	
	    	create_user_name,	    	
	    	modify_user_id,	    	
	    	modify_user_name	    	
		) values(
			#{id},			 
			#{exp},			 
			#{name},			 
			#{detail},	
			#{isDelete},		 
			#{createTime},			 
			#{modifyTime},			 
			#{createUserId},			 
			#{createUserName},			 
			#{modifyUserId},			 
			#{modifyUserName}			 
		)
	</insert>
	
	<select id="findById" resultType="ExpRule">
		select
			<include refid="allColumns"/>
		from
			liebao_exp_rule ler
			<include refid="joinOthers"/>
		where
			ler.id = #{id} and ler.is_delete = 0
	</select>
	
	<select id="findOneByObject" resultType="ExpRule">
		select
			<include refid="allColumns"/>
		from
			liebao_exp_rule ler
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="countByObject" resultType="Long">
		select
			count(ler.id)
		from
			liebao_exp_rule ler
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="findByObject" resultType="ExpRule">
		select
			<include refid="allColumns"/>
		from
			liebao_exp_rule ler
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
		<include refid="searchOrder"/>
  		<if test="limitStart != null and limitSize != null">
         	 LIMIT #{limitStart},#{limitSize}
 		</if>
	</select>
	
	<update id="update">
		update liebao_exp_rule set
			is_delete=#{isDelete},			
			exp=#{exp},			
			name=#{name},
			detail=#{detail},			
			create_time=#{createTime},			
			modify_time=#{modifyTime},			
			create_user_id=#{createUserId},			
			create_user_name=#{createUserName},			
			modify_user_id=#{modifyUserId},			
			modify_user_name=#{modifyUserName}			
		where
			id = #{id}
	</update>
	
	<!-- 物理删除 
	<delete id="deleteById">
		delete from liebao_exp_rule where id = #{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from liebao_exp_rule where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	-->
	
	<!-- 逻辑删除 -->
	<update id="deleteById">
		update liebao_exp_rule set is_delete = 1 where id = #{id}
	</update>
	
	<update id="deleteByIds">
		update liebao_exp_rule set is_delete = 1 where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</update>
</mapper>