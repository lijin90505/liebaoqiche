<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ibest.pay.dao.PayAliReconDao">

    <sql id="allColumns">
    	lpar.id as id,    	
    	lpar.pay_recon_id as payReconId,    	
    	lpar.bill_date as billDate,    	
    	lpar.bill_type as billType,    	
    	lpar.trade_time as tradeTime,    	
    	lpar.app_id as appId,    	
    	lpar.mch_id as mchId,    	
    	lpar.sub_mch_id as subMchId,    	
    	lpar.device_Info as deviceInfo,    	
    	lpar.trade_no as tradeNo,    	
    	lpar.order_id as orderId,    	
    	lpar.user_id as userId,    	
    	lpar.trade_type as tradeType,    	
    	lpar.trade_state as tradeState,    	
    	lpar.bank_type as bankType,    	
    	lpar.fee_type as feeType,    	
    	lpar.total_amount as totalAmount,    	
    	lpar.coupon_fee as couponFee,    	
    	lpar.result_refund_order_no as resultRefundOrderNo,    	
    	lpar.refund_order_no as refundOrderNo,    	
    	lpar.apply_refund_time as applyRefundTime,    	
    	lpar.refund_success_time as refundSuccessTime,    	
    	lpar.result_refund_no as resultRefundNo,    	
    	lpar.refund_no as refundNo,    	
    	lpar.refund_amount as refundAmount,    	
    	lpar.refund_coupon_fee as refundCouponFee,    	
    	lpar.refund_type as refundType,    	
    	lpar.refund_state as refundState,    	
    	lpar.merchant_name as merchantName,    	
    	lpar.merchant_data as merchantData,    	
    	lpar.service_charge as serviceCharge,    	
    	lpar.rate as rate,    	
    	lpar.create_date as createDate,    	
    	lpar.recon_state as reconState,    	
    	lpar.fail_message as failMessage,    	
    	lpar.collected_amount as collectedAmount    	
    </sql>
    
    <sql id="joinOthers">
    </sql>
    
    <sql id="searchWhere">
    	<!-- 根据需要自行设置，同时同步InputDTO中的参数
		<if test="id != null and id != ''">
			and lpar.id = #{id}
		</if>
		<if test="payReconId != null and payReconId != ''">
			and lpar.pay_recon_id = #{payReconId}
		</if>
		<if test="billDate != null and billDate != ''">
			and lpar.bill_date = #{billDate}
		</if>
		<if test="billType != null and billType != ''">
			and lpar.bill_type = #{billType}
		</if>
		<if test="tradeTime != null and tradeTime != ''">
			and lpar.trade_time = #{tradeTime}
		</if>
		<if test="appId != null and appId != ''">
			and lpar.app_id = #{appId}
		</if>
		<if test="mchId != null and mchId != ''">
			and lpar.mch_id = #{mchId}
		</if>
		<if test="subMchId != null and subMchId != ''">
			and lpar.sub_mch_id = #{subMchId}
		</if>
		<if test="deviceInfo != null and deviceInfo != ''">
			and lpar.device_Info = #{deviceInfo}
		</if>
		<if test="tradeNo != null and tradeNo != ''">
			and lpar.trade_no = #{tradeNo}
		</if>
		<if test="orderId != null and orderId != ''">
			and lpar.order_id = #{orderId}
		</if>
		<if test="userId != null and userId != ''">
			and lpar.user_id = #{userId}
		</if>
		<if test="tradeType != null and tradeType != ''">
			and lpar.trade_type = #{tradeType}
		</if>
		<if test="tradeState != null and tradeState != ''">
			and lpar.trade_state = #{tradeState}
		</if>
		<if test="bankType != null and bankType != ''">
			and lpar.bank_type = #{bankType}
		</if>
		<if test="feeType != null and feeType != ''">
			and lpar.fee_type = #{feeType}
		</if>
		<if test="totalAmount != null and totalAmount != ''">
			and lpar.total_amount = #{totalAmount}
		</if>
		<if test="couponFee != null and couponFee != ''">
			and lpar.coupon_fee = #{couponFee}
		</if>
		<if test="resultRefundOrderNo != null and resultRefundOrderNo != ''">
			and lpar.result_refund_order_no = #{resultRefundOrderNo}
		</if>
		<if test="refundOrderNo != null and refundOrderNo != ''">
			and lpar.refund_order_no = #{refundOrderNo}
		</if>
		<if test="applyRefundTime != null and applyRefundTime != ''">
			and lpar.apply_refund_time = #{applyRefundTime}
		</if>
		<if test="refundSuccessTime != null and refundSuccessTime != ''">
			and lpar.refund_success_time = #{refundSuccessTime}
		</if>
		<if test="resultRefundNo != null and resultRefundNo != ''">
			and lpar.result_refund_no = #{resultRefundNo}
		</if>
		<if test="refundNo != null and refundNo != ''">
			and lpar.refund_no = #{refundNo}
		</if>
		<if test="refundAmount != null and refundAmount != ''">
			and lpar.refund_amount = #{refundAmount}
		</if>
		<if test="refundCouponFee != null and refundCouponFee != ''">
			and lpar.refund_coupon_fee = #{refundCouponFee}
		</if>
		<if test="refundType != null and refundType != ''">
			and lpar.refund_type = #{refundType}
		</if>
		<if test="refundState != null and refundState != ''">
			and lpar.refund_state = #{refundState}
		</if>
		<if test="merchantName != null and merchantName != ''">
			and lpar.merchant_name = #{merchantName}
		</if>
		<if test="merchantData != null and merchantData != ''">
			and lpar.merchant_data = #{merchantData}
		</if>
		<if test="serviceCharge != null and serviceCharge != ''">
			and lpar.service_charge = #{serviceCharge}
		</if>
		<if test="rate != null and rate != ''">
			and lpar.rate = #{rate}
		</if>
		<if test="reconState != null and reconState != ''">
			and lpar.recon_state = #{reconState}
		</if>
		<if test="failMessage != null and failMessage != ''">
			and lpar.fail_message = #{failMessage}
		</if>
		<if test="collectedAmount != null and collectedAmount != ''">
			and lpar.collected_amount = #{collectedAmount}
		</if>
		<if test="createBy != null and createBy != ''">
			and lpar.CREATE_BY = #{createBy}
		</if>
		<if test="createDate != null">
			and lpar.CREATE_DATE = #{createDate}
		</if>
		<if test="updateBy != null and updateBy != ''">
			and lpar.UPDATE_BY = #{updateBy}
		</if>
		<if test="updateDate != null">
			and lpar.UPDATE_DATE = #{updateDate}
		</if>
		<if test="isDelete != null">
			and lpar.IS_DELETE = #{isDelete}
		</if>
		-->
    </sql>
    
    <sql id="searchOrder">
    	<if test="order != null and order != '' and desc != null and desc != ''">
			order by lpar.${order} ${desc}
		</if>
    </sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into liebao_pay_ali_recon(
			id,
	    	pay_recon_id,	    	
	    	bill_date,	    	
	    	bill_type,	    	
	    	trade_time,	    	
	    	app_id,	    	
	    	mch_id,	    	
	    	sub_mch_id,	    	
	    	device_Info,	    	
	    	trade_no,	    	
	    	order_id,	    	
	    	user_id,	    	
	    	trade_type,	    	
	    	trade_state,	    	
	    	bank_type,	    	
	    	fee_type,	    	
	    	total_amount,	    	
	    	coupon_fee,	    	
	    	result_refund_order_no,	    	
	    	refund_order_no,	    	
	    	apply_refund_time,	    	
	    	refund_success_time,	    	
	    	result_refund_no,	    	
	    	refund_no,	    	
	    	refund_amount,	    	
	    	refund_coupon_fee,	    	
	    	refund_type,	    	
	    	refund_state,	    	
	    	merchant_name,	    	
	    	merchant_data,	    	
	    	service_charge,	    	
	    	rate,	    	
	    	create_date,	    	
	    	recon_state,	    	
	    	fail_message,	    	
	    	collected_amount	    	
		) values(
			replace(UUID(), '-',''),
			#{payReconId},			 
			#{billDate},			 
			#{billType},			 
			#{tradeTime},			 
			#{appId},			 
			#{mchId},			 
			#{subMchId},			 
			#{deviceInfo},			 
			#{tradeNo},			 
			#{orderId},			 
			#{userId},			 
			#{tradeType},			 
			#{tradeState},			 
			#{bankType},			 
			#{feeType},			 
			#{totalAmount},			 
			#{couponFee},			 
			#{resultRefundOrderNo},			 
			#{refundOrderNo},			 
			#{applyRefundTime},			 
			#{refundSuccessTime},			 
			#{resultRefundNo},			 
			#{refundNo},			 
			#{refundAmount},			 
			#{refundCouponFee},			 
			#{refundType},			 
			#{refundState},			 
			#{merchantName},			 
			#{merchantData},			 
			#{serviceCharge},			 
			#{rate},			 
			#{createDate},			 
			#{reconState},			 
			#{failMessage},			 
			#{collectedAmount}			 
		)
	</insert>
	
	<select id="findById" resultType="PayAliRecon">
		select
			<include refid="allColumns"/>
		from
			liebao_pay_ali_recon lpar
			<include refid="joinOthers"/>
		where
			lpar.id = #{id}
	</select>
	
	<select id="findOneByObject" resultType="PayAliRecon">
		select
			<include refid="allColumns"/>
		from
			liebao_pay_ali_recon lpar
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="countByObject" resultType="Long">
		select
			count(lpar.id)
		from
			liebao_pay_ali_recon lpar
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
	</select>
	
	<select id="findByObject" resultType="PayAliRecon">
		select
			<include refid="allColumns"/>
		from
			liebao_pay_ali_recon lpar
			<include refid="joinOthers"/>
		<where>
			<include refid="searchWhere"/>
		</where>
		<include refid="searchOrder"/>
  		<if test="limitStart != null and limitSize != null">
         	LIMIT #{limitStart},#{limitSize}
 		</if>
	</select>
	
	<update id="update">
		update liebao_pay_ali_recon set
			pay_recon_id=#{payReconId},			
			bill_date=#{billDate},			
			bill_type=#{billType},			
			trade_time=#{tradeTime},			
			app_id=#{appId},			
			mch_id=#{mchId},			
			sub_mch_id=#{subMchId},			
			device_Info=#{deviceInfo},			
			trade_no=#{tradeNo},			
			order_id=#{orderId},			
			user_id=#{userId},			
			trade_type=#{tradeType},			
			trade_state=#{tradeState},			
			bank_type=#{bankType},			
			fee_type=#{feeType},			
			total_amount=#{totalAmount},			
			coupon_fee=#{couponFee},			
			result_refund_order_no=#{resultRefundOrderNo},			
			refund_order_no=#{refundOrderNo},			
			apply_refund_time=#{applyRefundTime},			
			refund_success_time=#{refundSuccessTime},			
			result_refund_no=#{resultRefundNo},			
			refund_no=#{refundNo},			
			refund_amount=#{refundAmount},			
			refund_coupon_fee=#{refundCouponFee},			
			refund_type=#{refundType},			
			refund_state=#{refundState},			
			merchant_name=#{merchantName},			
			merchant_data=#{merchantData},			
			service_charge=#{serviceCharge},			
			rate=#{rate},			
			recon_state=#{reconState},			
			fail_message=#{failMessage},			
			collected_amount=#{collectedAmount}			
		where
			id = #{id}
	</update>
	
	<!-- 物理删除 
	<delete id="deleteById">
		delete from liebao_pay_ali_recon where id = #{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from liebao_pay_ali_recon where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	-->
	
	<!-- 逻辑删除 -->
	<update id="deleteById">
		update liebao_pay_ali_recon set is_delete = 1 where id = #{id}
	</update>
	
	<update id="deleteByIds">
		update liebao_pay_ali_recon set is_delete = 1 where id in 
		<foreach collection="ids" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</update>
</mapper>